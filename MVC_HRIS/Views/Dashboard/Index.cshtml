@{
    ViewData["Title"] = "Dashboard";

    Layout = "~/Views/Shared/_Layout.cshtml";
    string message = "";
    if (ViewData["Message"] != null)
    {
        message = ViewData["Message"].ToString();
    }

}

<style>

</style>
<div id="emp-main-container">

    <div class="dash-maincontainer">
        <div>
            <h4 style="font-size: 26px;" class="text-left">  <i class="fa-solid fa-users" style="margin: 10px;"></i> @ViewData["Title"].ToString()</h4>
        </div>
    </div>

    <div class="dash-maincontainer">
        <div class="d-flex-row w-100 gap-35">
            <div class="d-flex-col w-100 gap-35">
                <div class="w-100 shadow-effect h-100">
                    <div class="d-flex-row w-100 h-100  gap-35">
                        <div class="w-70  b-g-primary d-flex-col shadow-effect">
                            <div class="pad-15 t-emp">
                                <label style="font-size:20px;">Total Employees<label>
                            </div>
                            <div class="pad-15 t-emp">
                                <label id="total_employee" style="font-size:150px;color:yellow">15<label>
                            </div>
                           
                        </div>
                        <div class="w-100">
                            <div class="d-flex-col w-100 h-100">
                                <div class="d-flex-row w-100 h-100">
                                    <div class="border-bot w-100">
                                        <div class="pad-15">
                                            <label  style="font-size:20px;">Full-Time<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label id="full_time" style="font-size:70px;">115<label>
                                        </div>
                                    </div>
                                    <div class="border-bot  border-left w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Part-Time<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label id="part_time" style="font-size:70px;">123<label>
                                        </div>
                                    </div>

                                </div>
                                <div class="d-flex-row w-100  h-100">
                                    <div class="border-bot w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Project-Based<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label id="proj_based" style="font-size:70px;">25<label>
                                        </div>
                                    </div>
                                    <div class="border-bot  border-left w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Hourly-Based<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label id="hour_based" style="font-size:70px;">8<label>
                                        </div>
                                    </div>

                                </div>
                            </div>
                            
                            
                        </div>
                    </div>
               </div>
                <div class="w-100 shadow-effect h-100">
                    <div class="d-flex-col w-100  h-100">
                        <div class="d-flex-row w-100">
                            <div class="d-none">
                                <label class="label-color" for="barangay">Filter By:</label>
                                <select id="barangay" class="mod-input" required>
                                    <option value="0" disabled selected>Select Filter</option>
                                </select>
                            </div>
                            <div class="d-none">
                                <label class="label-color" for="province">Barangay</label>
                                <select id="barangay" class="mod-input" style="width:100%" required>
                                    <option value="0" disabled selected>Select Barangay</option>
                                </select>
                            </div>
                            <div class="d-none">
                                <label class="label-color" for="province">Barangay</label>
                                <select id="barangay" class="mod-input" style="width:100%" required>
                                    <option value="0" disabled selected>Select Barangay</option>
                                </select>
                            </div>
                            <div class="d-none">
                                <label class="label-color" for="province">Barangay</label>
                                <select id="barangay" class="mod-input" style="width:100%" required>
                                    <option value="0" disabled selected>Select Barangay</option>
                                </select>
                            </div>
                        </div>

                        <div class="g-15">
                            <div class="d-flex-row w-100 gap-35">
                            
                                <input type="date" id="datefrom" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                <input type="date" id="dateto" class="mod-inputs-nw" placeholder="Date" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
                                <select id="emp_type2" required class="utype w-100" style="margin-top: 0px !important;">
                                </select>
                                <div class="w-100">
                                </div>
                                <div class="w-100">
                                </div>
                            </div>
                            <table id="userhour-table" class="table table-bordered table-hover w-100">
                                <thead>
                                </thead>
                                <tbody>
                                </tbody>

                            </table>
                            <div id="table-footer">
                            </div>
                       </div>
                    
                    </div>
               </div>
            </div>
            <div class="w-100 shadow-effect">
                <div id="calendar" ></div>
            </div>
        </div>
    </div>
    <div class="dash-maincontainer h-100">
        @* <div class="d-flex-row w-100 gap-35">
            <div class="d-flex-col w-100 gap-35">
                <div class="w-100 shadow-effect h-100">
                    <div class="d-flex-row w-100 h-100  gap-35">
                        <div class="w-70  b-g-primary d-flex-col shadow-effect">
                            <div class="pad-15 t-emp">
                                <label style="font-size:20px;">Total Employees<label>
                            </div>
                            <div class="pad-15 t-emp">
                                <label style="font-size:150px;color:yellow">15<label>
                            </div>

                        </div>
                        <div class="w-100">
                            <div class="d-flex-col w-100 h-100">
                                <div class="d-flex-row w-100 h-100">
                                    <div class="border-bot w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Full-Time<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label style="font-size:70px;">115<label>
                                        </div>
                                    </div>
                                    <div class="border-bot  border-left w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Part-Time<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label style="font-size:70px;">123<label>
                                        </div>
                                    </div>

                                </div>
                                <div class="d-flex-row w-100  h-100">
                                    <div class="border-bot w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Project-Based<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label style="font-size:70px;">25<label>
                                        </div>
                                    </div>
                                    <div class="border-bot  border-left w-100">
                                        <div class="pad-15">
                                            <label style="font-size:20px;">Hourly-Based<label>
                                        </div>
                                        <div class="pad-15 sub-t-emp">
                                            <label style="font-size:70px;">8<label>
                                        </div>
                                    </div>

                                </div>
                            </div>


                        </div>
                    </div>
                </div>
                <div class="w-100 shadow-effect h-100">
                </div>
            </div>
           
        </div> *@
    </div>
</div>




<!-- Modal for Adding & Editing -->
<div id="scheduleModal" class="modal fade" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Manage Schedule</h5>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>
            <div class="modal-body">
                <input type="hidden" id="scheduleId">
                <label class="label-color" for="department">Employment Type </label>
                <select id="emp_type" class="mod-input" style="width:100%" required>
                    <option value="" disabled selected>Select Employment</option>
                </select>
                <label>Shift Start:</label>
                <input type="time" id="shiftStart" class="form-control">
                <label>Shift End:</label>
                <input type="time" id="shiftEnd" class="form-control">
                <label>Break Start:</label>
                <input type="time" id="breakStart" class="form-control">
                <label>Break End:</label>
                <input type="time" id="breakEnd" class="form-control">
                <label>Date:</label>
                <input type="date" id="scheduleDate" class="form-control">
            </div>
            <div class="modal-footer">
                <button id="saveSchedule" class="btn btn-success">Save</button>
                <button id="deleteSchedule" class="btn btn-danger">Delete</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetchemploymentoption();
            FetchUserTypeCountModel();
            fetchusertypeselect();
            let dateFrom = $("#datefrom").val();
            let dateTo = $("#dateto").val();
            let usertype = $("#emp_type2").val();
            FetcTotalRenderedHoursList(dateFrom, dateTo, usertype);
            let today = new Date().toISOString().split("T")[0];
            document.getElementById("datefrom").setAttribute("max", today);
            document.getElementById("dateto").setAttribute("max", today);
            var calendar = new FullCalendar.Calendar(calendarEl, {
                aspectRatio: 1.5,
            });
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                events: '/Dashboard/GetScheduleList',
                eventContent: function (arg) {
                    var t_start = moment(arg.event.start).format('h:mm A'); // Format the time
                    var t_end = moment(arg.event.end).format('h:mm A'); // Format the time
                    var title = arg.event.extendedProps.subtitle;
                    return {
                        html: '<div class="fc-event-time">' + t_start + '- ' + t_end + '</div><div class="fc-event-title">(' + title + ')</div>'
                    };
                },
                selectable: true,
                editable: true,

                // Add Schedule
                dateClick: function (info) {
                    console.log(info.dateStr);
                    $("#scheduleId").val("");
                    $("#scheduleDate").val(info.dateStr);
                    $("#shiftStart").val("");
                    $("#shiftEnd").val("");
                    $("#deleteSchedule").hide();
                    $("#scheduleModal").modal("show");
                },

                // Edit Schedule
                eventClick: function (info) {
                    let { start, end, id} = info.event;
                    let [startDate, startTime] = start.toISOString().split('T');
                    let [endDate, endTime] = end.toISOString().split('T');
                    let s_break = info.event.extendedProps.start_break;
                    let e_break = info.event.extendedProps.end_break;
                    // let [breakDate, s_breakTime] = s_break.toISOString().split('T');
                    console.log();
               
                    $("#scheduleId").val(id);
                    $("#scheduleDate").val(startDate);
                    $("#shiftStart").val(formatTime(startTime));
                    $("#shiftEnd").val(formatTime(endTime));
                    $("#breakStart").val(convertToTimeSpan(s_break));
                    $("#breakEnd").val(convertToTimeSpan(e_break));
                    $("#deleteSchedule").show();
                    $("#scheduleModal").modal("show");
                }
            });

            calendar.render();

            // Save Schedule (Add/Edit)
            $("#saveSchedule").click(function () {
                var schedule = {
                    Id: $("#scheduleId").val() || 0, // Default to 0 if empty
                    EmployeeId: $("#employeeId").val(), // Ensure EmployeeId is included
                    ScheduleDate: $("#scheduleDate").val(),
                    ShiftStartTime: convertToTimeSpan($("#shiftStart").val()),
                    ShiftEndTime: convertToTimeSpan($("#shiftEnd").val()),
                    BreakStartTime: convertToTimeSpan($("#breakStart").val()),
                    BreakEndTime: convertToTimeSpan($("#breakEnd").val()),
                    CreatedAt: new Date().toISOString(),
                    UpdatedAt: new Date().toISOString()
                };
                console.log(schedule);
                var url = schedule.Id ? "/Dashboard/EditSchedule" : "/Dashboard/CreateSchedule";

                $.ajax({
                    url: url,
                    type: "POST",
                    datatype: "json",
                    data: schedule,
                    success: function (response) {
                        if (response.success) {
                            alert("Schedule saved successfully!");
                            calendar.refetchEvents();
                            $("#scheduleModal").modal("hide");
                        } else {
                            alert("Error: " + response.message);
                        }
                    },
                    error: function (xhr) {
                        alert("Failed to save schedule: " + xhr.responseText);
                    }
                });
            });

            // Delete Schedule
            $("#deleteSchedule").click(function () {
                var id = $("#scheduleId").val();

                if (!id) return;

                if (confirm("Are you sure you want to delete this schedule?")) {
                    console.log("Sending ID:", id); // Debugging before AJAX
                    $.ajax({
                        url: "/Dashboard/DeleteSchedule",
                        type: "POST",
                        dataType: "json",
                        data: {
                            id: id
                        }, // Send data properly formatted
                        success: function (response) {
                            if (response.success) {
                                alert("Schedule deleted successfully!");
                                calendar.refetchEvents();
                                $("#scheduleModal").modal("hide");
                            } else {
                                alert("Error: " + response.message);
                            }
                        },
                        error: function (xhr) {
                            alert("Failed to delete schedule: " + xhr.responseText);
                        }
                    });
                }
            });
        });
        function convertToTimeSpan(time) {
            let date = new Date(time);
            let hours = date.getHours().toString().padStart(2, '0'); // Ensures two digits
            let minutes = date.getMinutes().toString().padStart(2, '0');
            return `${hours}:${minutes}`;
        }
        function formatTime(timeString) {
            let date = new Date("1970-01-01T" + timeString);

            // Convert to HH:MM (24-hour format) for <input type="time">
            let hours = date.getHours().toString().padStart(2, "0");
            let minutes = date.getMinutes().toString().padStart(2, "0");

            return `${hours}:${minutes}`; // Returns "09:00" or "21:00"
        }
        function loadDataTable(dateFrom, dateTo) {
            if ($.fn.DataTable.isDataTable("#userhour-table")) {
                $("#userhour-table").DataTable().destroy(); // Destroy existing DataTable
            }
            let usertype = $("#emp_type2").val();
            FetcTotalRenderedHoursList(dateFrom, dateTo,usertype);
        }
        $("#datefrom, #dateto").on("change", function () {
            let dateFrom = $("#datefrom").val();
            let dateTo = $("#dateto").val();
       
            if (dateFrom && dateTo) {
                loadDataTable(dateFrom, dateTo);
            }
        });
        $('#emp_type2').on('change', function () {
            let dateFrom = $("#datefrom").val();
            let dateTo = $("#dateto").val();
            let usertype = $("#emp_type2").val();
            FetcTotalRenderedHoursList(dateFrom, dateTo, usertype);
        });
    </script>
}

