  @using Microsoft.AspNetCore.Http;
    @inject IHttpContextAccessor Accessor;
@{
    ViewData["Title"] = "Employee Type";
    Layout = "~/Views/Shared/_Layout.cshtml";
    string message = "";
    if (ViewData["Message"] != null)
    {
        message = ViewData["Message"].ToString();
    }
}
<style>

</style>
<div id="dashboard-main-container">
    <div class="title-main-container">
        <div class="content-container">
            <h4 style="font-size: 26px;" class="text-left">  <i class="fa-solid fa-users" style="margin: 10px;"></i> @ViewData["Title"].ToString()</h4>
        </div>
        <div class="top-main-container ">
        </div>
        <div class="main-container">
            <div class="content-filter">
                <div class="sub-content">
                    <div class="mod-form">
                        <div class="input-container">
                            <button class="btn btn-info" id="add-timelogs" title="Time Out" onclick="openETypeModal()">
                                <i class="fa-solid fa-plus"></i> Create Employee Type
                            </button>
                        </div>
                    </div>
                </div>
                <div class="content-filter-tbl">
                    <table id="etype-table" class="table table-bordered table-hover w-100">
                        <thead>
                        </thead>
                        <tbody>
                        </tbody>

                    </table>
                    <div id="table-footer">
                    </div>

                </div>
            </div>
        </div>
    </div>

    <div class="modal-schedule-holder" id="etypemodal" style="display: none">
        <div class="schedulemodal">
            <div class="header">
                <h3>Add Employee Type</h3>
                <button class="closemodal" id="closemodal" aria-label="Close" onclick="closeETypeModal()"></button>
            </div>
            <form id="add-eType-form">
                <div class="input-time-holder">
                    <h4 class="label">Title</h4>
                    <div class="input-holder-time">
                        <div class="input-holder">
                            <div class="input-container">
                                <input type="hidden" id="eTypeId" class="mod-inputs-nw" placeholder="Title" value="0" />
                                <input type="text" id="eTypetitle" class="mod-inputs-nw" placeholder="Title" required />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="input-time-holder">
                    <h4 class="label">Description</h4>
                    <div class="input-holder-time">
                        <div class="input-holder">
                            <div class="input-container">
                                <textarea id="eTypedescription" class="mod-inputs-nw" placeholder="Description" style="min-height: 100px;" required /></textarea>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="input-time-holder">
                    <h4 class="label">Schedule</h4>
                    <div class="input-holder-time">
                        <div class="input-holder">
                            <div class="input-container">
                                <select id="schedule">
                                    <option>Select Schedule</option>
                                </select>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="input-holder">
                    <div class="input-container">
                        <input type="submit" value="Save" id="add-schedule" />
                    </div>
                </div>
            </form>
        </div>
    </div>

</div>
@section Scripts {
    <script>
        var uid = "@Accessor.HttpContext.Session.GetString("UserID")";
        scheduleDOM();
        $(document).ready(function () {

            initializeDataTable();
        });
        function initializeDataTable() {
            var tableId = '#etype-table';
            var lastSelectedRow = null;

            // Check if DataTable is already initialized
            if ($.fn.DataTable.isDataTable(tableId)) {
                // Destroy the existing DataTable instance
                $(tableId).DataTable().clear().destroy();
            }

            var dtProperties = {
                ajax: {
                    url: '/EmployeeType/GetETypeList',
                    type: "GET",
                    data: {
                    },
                    dataType: "json",
                    processing: true,
                    serverSide: true,
                    complete: function (xhr) {

                    },
                    error: function (err) {
                        alert(err.responseText);
                    }
                },
                columns: [
                    {
                        "title": "Type",
                        "data": "title"
                    },
                    {
                        "title": "Description",
                        "data": "description"
                    },

                    {
                        "title": "Action",
                        "data": "id",
                        "render": function (data, type, row) {

                            var button = `<div class="action">
                                                                <button class="tbl-edit btn btn-info" id="add-timeout" title="Time Out"
                                                                    data-id="${data}"
                                                                    data-title="${row.title}"
                                                                    data-description="${row.description}"
                                                                    data-schedule = "${row.scheduleId}"
                                                                    >
                                                                    <i class="fa-solid fa-pen-to-square"></i> edit
                                                                </button>
                                                                <button class="tbl-delete btn btn-danger" id="add-timeout" title="Time Out"
                                                                    data-id="${data}"
                                                                    data-title="${row.title}"
                                                                    data-description="${row.description}"
                                                                    data-schedule = "${row.scheduleId}"
                                                                    >
                                                                    <i class="fa-solid fa-trash"></i> delete
                                                                </button>
                                                    </div>`;

                            return button;
                        }
                    }
                ],
                order: [[0, 'desc']], // Sort the second column (index 1) by descending order
                columnDefs: [{ width: '10%', targets: 2 }, { width: '30%', targets: 0 }]

            };

            var table = $(tableId).DataTable(dtProperties);

            // Attach computeTotalRenderedHours to the search event
            $(tableId + '_filter input').on('keyup', function () {
                computeTotalRenderedHours();
            });

            $(tableId).on('page.dt', function () {
                var info = table.page.info();
                var url = new URL(window.location.href);
                url.searchParams.set('page01', (info.page + 1));
                window.history.replaceState(null, null, url);
            });

            $(tableId + '_filter input').attr('placeholder', 'Search anything here...');

            $(tableId + ' tbody').on('click', 'tr', function () {
                var data = table.row(this).data();
                // console.log(data);
                // Remove highlight from the previously selected row
                if (lastSelectedRow) {
                    $(lastSelectedRow).removeClass('selected-row');
                }

                // Highlight the currently selected row
                $(this).addClass('selected-row');
                lastSelectedRow = this;
            });
        } GetScheduleListOption();
        function openETypeModal() {
            document.getElementById('eTypeId').value = "";
            document.getElementById('eTypetitle').value = "";
            document.getElementById('eTypedescription').value = "";
            document.getElementById('schedule').value = "";
            etmodal = document.getElementById('etypemodal');
            etmodal.style.display = "flex";
        }
        function closeETypeModal() {
            etmodal = document.getElementById('etypemodal');
            etmodal.style.display = "none";
        }
        $('#etype-table').on('click', '.tbl-edit', function () {


            document.getElementById('eTypeId').value = $(this).data('id');
            document.getElementById('eTypetitle').value = $(this).data('title');
            document.getElementById('eTypedescription').value = $(this).data('description');
            document.getElementById('schedule').value = $(this).data('schedule');

            etmodal = document.getElementById('etypemodal');
            etmodal.style.display = "flex";
        });

        $('#etype-table').on('click', '.tbl-delete', function () {
            var id = $(this).data('id');
            localStorage.setItem('etypeid', id);

            deletemodalEType();
            $("#alertmodal").modal('show');
        });
        function delete_item_EType() {
            var data = {};
            var eTypeId = localStorage.getItem('etypeid');
            data.id = eTypeId;
            data.title = "";
            $.ajax({
                url: '/EmployeeType/AddEType',
                data: data,
                type: "POST",
                dataType: "json"
            }).done(function (data) {
                //console.log(data);
                notifyMsg('Success!', 'Successfully Deleted', 'green', 'fas fa-check');
                $("#alertmodal").modal('hide');
                initializeDataTable();
            });
        }
        $("#add-eType-form").on("submit", function (event) {
            event.preventDefault();
            var eTypeId = document.getElementById('eTypeId').value;
            var eTypetitle = document.getElementById('eTypetitle').value;
            var eTypedescription = document.getElementById('eTypedescription').value;
            var schedule = document.getElementById('schedule').value;

            var data = {};
            data.id = eTypeId;
            data.title = eTypetitle;
            data.description = eTypedescription;
            data.scheduleId = schedule;
            // console.log(data);

            var etmodal = document.getElementById('etypemodal');
            $.ajax({
                url: '/EmployeeType/AddEType',
                data: data,
                type: "POST",
                dataType: "json"
            }).done(function (data) {
                //console.log(data);
                notifyMsg('Success!', data.status, 'green', 'fas fa-check');
                etmodal.style.display = "none";
                initializeDataTable();
            });

        });
    </script>
}
